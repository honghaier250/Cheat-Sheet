# [Configure Docker to use a proxy server](https://docs.docker.com/network/proxy/)
# [Shrunk Docker Image](https://blog.yadutaf.fr/2015/04/25/how-i-shrunk-a-docker-image-by-98-8-featuring-fanotify/)
# Start docker daemon
docker -d

# start a container with an interactive shell
docker run -ti <image_name> /bin/bash

# "shell" into a running container (docker-1.3+)
docker exec -ti <container_name> bash

# inspect a running container
docker inspect <container_name> (or <container_id>)

# Get the process ID for a container
# Source: https://github.com/jpetazzo/nsenter
docker inspect --format {{.State.Pid}} <container_name_or_ID>

# List the current mounted volumes for a container (and pretty print)
# Source:
# http://nathanleclaire.com/blog/2014/07/12/10-docker-tips-and-tricks-that-will-make-you-sing-a-whale-song-of-joy/
docker inspect --format='{{json .Volumes}}' <container_id> | python -mjson.tool

# Copy files/folders between a container and your host
docker cp foo.txt mycontainer:/foo.txt

# list currently running containers
docker ps

# list all containers
docker ps -a

# list all images
docker images

# make ssl5 patch
docker run --rm -it -v "$PWD":/output -v ~/.ssh:/root/.ssh --tmpfs /tmp -e ISSUE_DATE="2017-11" -e PACKAGE_NAME="SSL5.2.4_SP6_bond" -e PACKAGE_VER=5 git.koal.com:4567/gw-server/docker/build-upgrade-package

# make ssl6 patch
sudo docker run --rm -it -v "$PWD":/output -v ~/.ssh:/root/.ssh --tmpfs /tmp -e ISSUE_DATE="2017-12" -e PACKAGE_NAME="SSL6.1.4_SP2_SNMP" git.koal.com:4567/gw-server/docker/build-upgrade-package

# aria2
sudo docker run -d --name aria2-with-webui -p 6800:6800 -p 6880:80 -v ~/Downloads:/data -e PGID=1000 -e PUID=1000 abcminiuser/docker-aria2-with-webui:latest-ng

# koal
sudo docker login git.koal.com:4567

# push image
sudo docker push git.koal.com:4567/gw-cloud/docker/trp:runit-amd64-v2

# rename image
sudo docker tag git.koal.com:4567/gw-cloud/docker/trp:runit-amd64 git.koal.com:4567/gw-cloud/docker/trp:runit-amd64-v2

# rename container
sudo docker rename xxx xxx1

# remove all images
sudo docker images | awk  '{print $3}' | xargs sudo docker image rm

sudo docker run --env HTTP_PROXY="https://10.0.80.195:8118" x11docker/deepin

# restart on boot
sudo docker run --restart=always

docker images | awk '{print $3}' | xargs docker image rm

# ubuntu instance
sudo tsocks docker run -it --entrypoint "/bin/bash" ubuntu:20.04

# namespace id
docker inspect --format '{{ .State.Pid }}' container_pid

# Building multi-arch Docker images 
https://hungpham2511.github.io/2021/02/06/docker-arm-support-with-buildx-and-simulator.html
