# https://github.com/trimstray/iptables-essentials
# [iptables-tutorial](http://www.cs.unibo.it/~ghini/didattica/sistemimobili/25021-Iptables_Tutorial_1.2.pdf)
# [/proc/sys/net/netfilter/nf_conntrack_](https://www.kernel.org/doc/Documentation/networking/nf_conntrack-sysctl.txt)
# [netfilter](http://inai.de/images/nf-packet-flow.png)
# Show hit for rules with auto refresh
watch --interval 0 'iptables -nvL | grep -v "0     0"'

# Show hit for rule with auto refresh and highlight any changes since the last refresh watch -d -n 2 iptables -nvL

# Block the port 902 and we hide this port from nmap.
iptables -A INPUT -i eth0 -p tcp --dport 902 -j REJECT --reject-with icmp-port-unreachable

# Note, --reject-with accept:
#	icmp-net-unreachable
#	icmp-host-unreachable
#	icmp-port-unreachable <- Hide a port to nmap
#	icmp-proto-unreachable
#	icmp-net-prohibited
#	icmp-host-prohibited or
#	icmp-admin-prohibited
#	tcp-reset

# Add a comment to a rule:
iptables ... -m comment --comment "This rule is here for this reason"


# To remove or insert a rule:
# 1) Show all rules
iptables -L INPUT --line-numbers
# OR iptables -nL --line-numbers

# Chain INPUT (policy ACCEPT)
#     num  target prot opt source destination
#     1    ACCEPT     udp  --  anywhere  anywhere             udp dpt:domain
#     2    ACCEPT     tcp  --  anywhere  anywhere             tcp dpt:domain
#     3    ACCEPT     udp  --  anywhere  anywhere             udp dpt:bootps
#     4    ACCEPT     tcp  --  anywhere  anywhere             tcp dpt:bootps

# 2.a) REMOVE (-D) a rule. (here an INPUT rule)
iptables -D INPUT 2

# 2.b) OR INSERT a rule.
iptables -I INPUT {LINE_NUMBER} -i eth1 -p tcp --dport 21 -s 123.123.123.123 -j ACCEPT -m comment --comment "This rule is here for this reason"

# iptables restore
iptables-restore -c < /etc/iptables-save

# port mirroring
iptables -t mangle -I PREROUTING -j TEE –gateway 10.20.0.129
iptables -t mangle -I POSTROUTING -j TEE –gateway 10.20.0.129

# drop specify package
sudo iptables -A INPUT -p tcp --tcp-flags ACK,FIN FIN,ACK -j DROP
sudo iptables -A INPUT -p tcp --tcp-flags ALL ACK -j DROP

# random drop
iptables -A INPUT -m statistic --mode random -j DROP

# redirect
iptables -t nat -I PREROUTING --src $SRC_IP_MASK --dst $DST_IP -p tcp --dport $portNumber -j REDIRECT --to-ports $rediectPort

# recent
iptables -A INPUT -i eth1 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A INPUT -i eth1 -p tcp -m multiport --dports 22 -m conntrack --ctstate NEW -m recent --update --seconds 60 --hitcount 10 --rttl --name SSH --rsource -j DROP
iptables -A INPUT -i eth1 -p tcp -m multiport --dports 22 -m conntrack --ctstate NEW -m recent --set --name SSH --rsource -j ACCEPT

# log to /var/log/messages
iptables -A INPUT -i eth1 -s 10.0.0.0/8 -j LOG --log-prefix "IP_SPOOF A: "

# trace
sudo iptables -t raw -A OUTPUT -p icmp -j TRACE
sudo iptables -t raw -A PREROUTING -p icmp -j TRACE

iptables -t filter -A INPUT -d $loglan -j LOG --log-prefix "IPTABLES_filter_INPUT-d:" --log-level 4
iptables -t filter -A INPUT -s $loglan -j LOG --log-prefix "IPTABLES_filter_INPUT-s:" --log-level 4
iptables -t filter -A OUTPUT -d $loglan -j LOG --log-prefix "IPTABLES_filter_OUTPUT-d:" --log-level 4
iptables -t filter -A OUTPUT -s $loglan -j LOG --log-prefix "IPTABLES_filter_OUTPUT-s:" --log-level 4
iptables -t filter -A FORWARD -j LOG --log-prefix "IPTABLES_filter_FORWARD:" --log-level 4

iptables -t nat -A PREROUTING -j LOG --log-prefix "IPTABLES_nat_PREROUTING:" --log-level 4
iptables -t nat -A POSTROUTING -j LOG --log-prefix "IPTABLES_nat_POSTROUTING:" --log-level 4
iptables -t nat -A OUTPUT -j LOG --log-prefix "IPTABLES_nat_OUTPUT:" --log-level 4

# port mirroring
sudo iptables -t mangle -A PREROUTING -j TEE --gateway 10.0.80.199
sudo iptables -t mangle -A POSTROUTING -j TEE --gateway 10.0.80.199

# netmap
sudo iptables -t nat -A PREROUTING -d 1.2.3.0/24 -j NETMAP --to 5.6.7.0/24
sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j NETMAP --to 192.168.1.200

# load balancing
https://scalingo.com/articles/2018/04/20/iptables.html

ip rule add fwmark 0x123 table 123
ip route add 10.0.80.201/32 via 192.168.190.7 table 123
ebtables -t broute -A BROUTING -s 08:00:27:76:85:01 -j mark --mark-set 0x123
iptables -t mangle -A PREROUTING -m mark --mark 0x123 -j CONNMARK --save-mark --nfmask 0xffffffff --ctmask 0xffffffff
iptables -t mangle -A PREROUTING -m mark ! --mark 0x0 -j ACCEPT
iptables -t mangle -A PREROUTING -j CONNMARK --restore-mark --nfmask 0xffffffff --ctmask 0xffffffff

# limit
sudo iptables -I OUTPUT -p tcp --syn --dport 8888 -j DROP
sudo iptables -I OUTPUT -p tcp --syn --dport 8888 -m limit --limit 1/m --limit-burst 1 -j ACCEPT
sudo iptables -D OUTPUT -p tcp --syn -m hashlimit --hashlimit 1/min --hashlimit-burst 1 --hashlimit-name ratelimithash --hashlimit-htable-expire 5000 --hashlimit-htable-gcinterval 3000 -j ACCEPT

sudo iptables -I OUTPUT -p tcp --dport 8888 -m connlimit --connlimit-above 3 -j DROP

# random load balance
iptables -A PREROUTING -t nat -p tcp -d 192.168.1.1 --dport 27017 \
         -m statistic --mode random --probability 0.33            \
         -j DNAT --to-destination 10.0.0.2:1234

iptables -A PREROUTING -t nat -p tcp -d 192.168.1.1 --dport 27017 \
         -m statistic --mode random --probability 0.5             \
         -j DNAT --to-destination 10.0.0.3:1234

[SNAT/DNAT](https://blog.csdn.net/weixin_45551608/article/details/117249462)
