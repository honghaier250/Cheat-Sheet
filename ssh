<<<<<<< HEAD
# [Proxytunnel](https://blog.cppse.nl/apache-proxytunnel-ssh-tunnel)
# -[玩转SSH端口转发](https://blog.fundebug.com/2017/04/24/ssh-port-forwarding/)
# To ssh via pem file (which normally needs 0600 permissions):
ssh -i /path/to/file.pem user@example.com

# To connect on an non-standard port:
ssh -p 2222 user@example.com

# To connect and forward the authentication agent
ssh -A user@example.com

# To execute a command on a remote server:
ssh -t user@example.com 'the-remote-command'
ssh -p 60022 ssl@10.0.109.123 tail -100f /var/log/NRP/1/access.log
ssh honghaier@10.0.80.195 "sudo -S /usr/sbin/tcpdump -i any -s0 -w - 'port 8080'" | wireshark -k -i -

# To tunnel an x session over SSH:
ssh -X user@example.com

# Redirect traffic with a tunnel between local host (port 8080) and a remote
# host (remote.example.com:5000) through a proxy (personal.server.com):
ssh -f -L 8080:remote.example.com:5000 user@personal.server.com -N

# To launch a specific x application over SSH:
ssh -X -t user@example.com 'chromium-browser'

# To create a SOCKS proxy on localhost and port 9999
ssh -D 9999 user@example.com

# -X use an xsession, -C compress data, "-c blowfish" use the encryption blowfish
ssh user@example.com -C -c blowfish -X

# For more information, see:
# http://unix.stackexchange.com/q/12755/44856

# Copy files and folders through ssh from remote host to pwd with tar.gz compression
# when there is no rsync command available
ssh user@example.com "cd /var/www/Shared/; tar zcf - asset1 asset2" | tar zxf -

# Mount folder/filesystem through SSH
# Install SSHFS from https://github.com/libfuse/sshfs
# Will allow you to mount a folder securely over a network.
sshfs name@server:/path/to/folder /path/to/mount/point

# Emacs can read file through SSH
# Doc: http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html
emacs /ssh:name@server:/path/to/file

# Start for SSL6
sudo start-stop-daemon --start --quiet --oknodo --pidfile /tmp/sshd-remote.pid --exec /usr/sbin/sshd -- -f /cfg/GAD/core/sshd.conf

# Local Port Forwarding
# [](https://serveo.net/)
ssh -f -N -L :8080:192.168.190.7:80 -p 60022 ssl@10.0.109.120
ssh -f -N -L :60022:192.168.80.197:22 root@192.168.80.197
scp -P 60022 NRPHelper.php root@192.168.192.1:~/
ssh -f -N -L 10.0.1.80:8443:10.0.80.195:80 honghaier@10.0.80.195

# localhost proxy
ssh -f -N -L :30001:127.0.0.1:22 admin@127.0.0.1

# Remote Tunnel
# GatewayPorts yes
ssh -o GatewayPorts=true -f -N -R :2222:10.20.1.7:22 honghaier@10.0.80.195
ssh -p 2222 root@10.0.80.195
# Remote Port Forwarding
ssh -R local:2000:remote:3000 root@103.59.22.17

# Dynamic Port Forwarding
ssh -D local:2000 root@103.59.22.17

# Tun Tunnel
sudo sshd -f /etc/ssh/sshd_config -o "PermitRootLogin=yes" -o "PermitTunnel=yes" -o "ServerAliveInterval=30"
sudo ssh -f -w 0:0 root@10.0.80.198 true

# Login router
ssh root@192.168.1.1

# Copy file to remote
ssh -p12522 admin@10.0.90.120 "cat > file" < file

# Receive file from remote
ssh -p12522 admin@10.0.90.120 "cat file" > file

# 将你的麦克风输出到远程计算机的扬声器
dd if=/dev/dsp | ssh -c arcfour -C username@host dd of=/dev/dsp

# 比较远程和本地文件
ssh user@host cat /path/to/remotefile | diff /path/to/localfile –

# 通过中间主机建立SSH连接
ssh -t reachable_host ssh unreachable_host

# 通过SSH运行复杂的远程shell命令
ssh host -l user “`cat cmd.txt`”

# chain port forward: client2 ssh login in client1
ssh -p 22222 client1

- internet[10.0.80.195]

- client2
ssh -f -N -L localhost:22222:localhost:2000 -p 22 honghaier@10.0.80.195
#ssh -f -N -R localhost:2001:localhost:22 honghaier@10.0.80.195

- client1
ssh -f -N -R localhost:2000:localhost:22 -p 22 honghaier@10.0.80.195
#ssh -f -N -L localhost:22222:localhost:2001 honghaier@10.0.80.195
#

# K0a120190701
ssl ssl2@10.0.1.81

# speed test
ssh -2 -c aes128-cbc root@<router> time dd if=/dev/zero bs=500000 count=200 > /dev/null
